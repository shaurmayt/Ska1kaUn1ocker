<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         TreatAsLocalProperty="TaskFolder;TaskAssembly">

	<PropertyGroup>
		<!-- Task assembly path -->
    <ShieldTaskAssembly Condition="'$(MSBuildRuntimeType)' == 'Full'">$(MSBuildThisFileDirectory)\..\netframework\Shield.Integration.dll</ShieldTaskAssembly>
    <ShieldTaskAssembly Condition="'$(ShieldTaskAssembly)' == ''">$(MSBuildThisFileDirectory)\..\netstandard\Shield.Integration.dll</ShieldTaskAssembly>
   

    <!-- Bytehide and Shield properties -->
		<!--Legacy <BytehideApiKey Condition="'$(BytehideApiKey)' == ''"></BytehideApiKey>-->

    <!--Legacy <ShieldSignFilePassword Condition="'$(ShieldSignFilePassword)' == ''"></ShieldSignFilePassword>-->
    <!--Legacy <ShieldSignFilePath Condition="'$(ShieldSignFilePath)' == ''"></ShieldSignFilePath>-->

		<!-- Protection configuration -->
		<!--Legacy <ShieldPreset Condition="'$(ShieldPreset)' == ''"></ShieldPreset>-->
		<!--Legacy <ShieldProtections Condition="'$(ShieldProtections)' == ''"></ShieldProtections>-->

		<!-- By default Shield will replace the output assembly (CI/CD integration purpose) -->
    <!--Legacy <ShieldIntermediateOutputPath Condition="'$(ShieldIntermediateOutputPath)' == ''">$(IntermediateOutputPath)shield\</ShieldIntermediateOutputPath>-->
    <!--Legacy <ShieldReplaceOutput Condition="'$(ShieldReplaceOutput)' == ''">true</ShieldReplaceOutput>-->
    <!--Legacy <ShieldOutputPath Condition="'$(ShieldOutputPath)' == ''">$(OutDir)shield\</ShieldOutputPath>-->

		<!-- Shield enabled -->
    <!--Legacy <ShieldEnabled Condition="'$(ShieldEnabled)' == ''">true</ShieldEnabled>-->
    <!--Legacy <ShieldForce Condition="'$(ShieldForce)' == ''">false</ShieldForce>-->

	</PropertyGroup>

	<!-- Shield configuration file, if API key not applied -->
	<!--Legacy <PropertyGroup Condition="'$(ShieldConfiguration)' == ''">-->
	<!--Legacy	<ShieldConfiguration Condition="Exists('$(MSBuildProjectDirectory)\bytehide.shield.json')">$(MSBuildProjectDirectory)\bytehide.shield.json</ShieldConfiguration>-->
	<!--Legacy </PropertyGroup>-->

	<!--<UsingTask TaskName="Bytehide.Beta.Shield.MSbuild.Protect" AssemblyFile="$(TaskAssembly)" />-->
	<UsingTask TaskName="Protect" AssemblyFile="$(ShieldTaskAssembly)" />

	<PropertyGroup>
		<ShieldDependsOn>
      $(ShieldDependsOn);
      ResolveReferences;
      ComputeIntermediateSatelliteAssemblies;
      ResolveProjectReferences;
      ResolveAssemblyReferences;
    </ShieldDependsOn>
	</PropertyGroup>

	<Target
		Name="ProtectWithShield"
		AfterTargets="RunSecrets;AfterCompile"
		Condition="Exists(@(IntermediateAssembly)) And $(DesignTimeBuild) != true"
		DependsOnTargets="$(ShieldDependsOn)">

		<Protect
			AssemblyPath="@(IntermediateAssembly)"
			DebugSymbolsPath="@(_DebugSymbolsIntermediatePath)"
			References="@(ReferencePath)"
      Configuration="$(Configuration)">
      
    </Protect>

	</Target>

</Project>
